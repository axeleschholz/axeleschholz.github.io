{"version":3,"sources":["utils/StyleConstants.js","components/Navbar.js","components/Home.js","components/SkillTree.js","components/ResumePage.js","components/BlogPost.js","utils/markdownParser.js","App.js","index.js"],"names":["COLORS","FONTS","SPACING","Nav","styled","nav","_templateObject","_taggedTemplateLiteral","Ul","ul","_templateObject2","Li","li","_templateObject3","StyledLink","Link","_templateObject4","Navbar","_jsx","children","_jsxs","to","PostsContainer","div","Home","_ref","posts","map","post","concat","slug","title","SkillTreeContainer","SkillTreeNode","SkillTreeItem","SkillTreeConnector","SkillTreeBox","_templateObject5","SkillTreeText","_templateObject6","SkillTree","skills","openNodes","setOpenNodes","useState","renderSkill","skill","parent","onClick","toggleNode","node","name","includes","filter","openNode","subSkills","renderSkills","ResumeContainer","Section","Heading","h1","Subheading","h2","Icon","span","Paragraph","p","skillsData","_templateObject7","_templateObject8","FontAwesomeIcon","_templateObject9","ResumePage","icon","faClipboard","faCode","faBriefcase","faGraduationCap","Container","BlogPost","postId","useParams","allPosts","find","Error","getPostBySlug","date","ReactMarkdown","content","Wrapper","App","console","log","rest","Router","Switch","Route","path","exact","component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0198bfa.chunk.js","sourcesContent":["export const COLORS = {\r\n  primary: '#171414',\r\n  secondary: '#333',     \r\n  background: \"#f5f5f5\",\r\n  accent: '#7A88FF',\r\n  text: '#1E1E1E',         \r\n  graphic: '#4CAF50',\r\n};\r\n  \r\nexport const FONTS = {\r\n  heading: 'Arial, sans-serif',\r\n  body: 'Verdana, sans-serif',\r\n};\r\n  \r\nexport const SPACING = {\r\n  small: '0.5em',\r\n  medium: '1em',\r\n  large: '1.5em',\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\n\r\nconst Nav = styled.nav`\r\n  background-color: ${COLORS.primary};\r\n  padding: ${SPACING.small};\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  margin-left: ${SPACING.small};\r\n`;\r\n\r\nconst Li = styled.li``;\r\n\r\nconst StyledLink = styled(Link)`\r\n  padding: ${SPACING.medium};\r\n  text-decoration: none;\r\n  flex: 1;\r\n  color: ${COLORS.background};\r\n  font-weight: bold;\r\n  font-family: ${FONTS.body};\r\n\r\n  &:hover {\r\n    background-color: ${COLORS.accent};\r\n  }\r\n`;\r\n\r\nconst Navbar = () => (\r\n  <Nav>\r\n    <Ul>\r\n      <Li>\r\n        <StyledLink to=\"/\">Home</StyledLink>\r\n      </Li>\r\n      <Li>\r\n        <StyledLink to=\"/about\">About</StyledLink>\r\n      </Li>\r\n    </Ul>\r\n  </Nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\n\r\nconst PostsContainer = styled.div`\r\n  padding: ${SPACING.medium};\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  margin-bottom: ${SPACING.small};\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${COLORS.text};\r\n  font-weight: bold;\r\n  font-family: ${FONTS.body};\r\n\r\n  &:hover {\r\n    color: ${COLORS.accent};\r\n  }\r\n`;\r\n\r\nconst Home = ({ posts }) => {\r\n  return (\r\n    <PostsContainer>\r\n      <h2>About This Project</h2>\r\n      <p>\r\n        This is the inital bare bones of a personal portfolio website. It runs\r\n        on React and does some cool stuff with loading post data through static\r\n        markdown files instead of dealing with a database.\r\n      </p>\r\n      <p>\r\n        Fun Fact: A lot of this was generated in collaboration with GPT 3.5. It\r\n        was my first experiment using ChatGPT to code and I was pleasently\r\n        surprised with the results.\r\n      </p>\r\n      <h2>Computers & Society Journals</h2>\r\n      <Ul>\r\n        {posts.map((post) => (\r\n          <Li key={post.slug}>\r\n            <StyledLink to={`/blog/${post.slug}`}>{post.title}</StyledLink>\r\n          </Li>\r\n        ))}\r\n      </Ul>\r\n    </PostsContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// SkillTree.js\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, SPACING } from \"../utils/StyleConstants\";\r\n\r\nconst SkillTreeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row; /* Display children horizontally */\r\n  align-items: center;\r\n`;\r\n\r\nconst SkillTreeNode = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkillTreeItem = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\nconst SkillTreeConnector = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  width: ${SPACING.small};\r\n  height: 2px;\r\n  background-color: ${COLORS.primary};\r\n`;\r\n\r\nconst SkillTreeBox = styled.div`\r\n  border: 2px solid ${COLORS.accent};\r\n  background-color: ${COLORS.accent};\r\n  color: ${COLORS.background};\r\n  border-radius: 5px;\r\n  padding: ${SPACING.small};\r\n  margin: ${SPACING.small};\r\n  display: inline-block;\r\n`;\r\n\r\nconst SkillTreeText = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SkillTree = ({ skills }) => {\r\n  const [openNodes, setOpenNodes] = useState([]);\r\n\r\n  const toggleNode = (node) => {\r\n    if (openNodes.includes(node)) {\r\n      setOpenNodes(openNodes.filter((openNode) => openNode !== node));\r\n    } else {\r\n      setOpenNodes([...openNodes, node]);\r\n    }\r\n  };\r\n\r\n  const renderSkill = (skill) => (\r\n    <SkillTreeItem key={skill.name}>\r\n      {skill.parent && <SkillTreeConnector />}\r\n      <SkillTreeBox>\r\n        <SkillTreeNode>\r\n          <SkillTreeText onClick={() => toggleNode(skill.name)}>\r\n            {skill.subSkills ? (\r\n              <strong>{skill.name}</strong>\r\n            ) : (\r\n              <span>{skill.name}</span>\r\n            )}\r\n          </SkillTreeText>\r\n        </SkillTreeNode>\r\n      </SkillTreeBox>\r\n      {skill.subSkills && openNodes.includes(skill.name) && (\r\n        <SkillTreeContainer>{renderSkills(skill.subSkills)}</SkillTreeContainer>\r\n      )}\r\n    </SkillTreeItem>\r\n  );\r\n\r\n  const renderSkills = (skills) => skills.map(renderSkill);\r\n\r\n  return <SkillTreeContainer>{renderSkills(skills)}</SkillTreeContainer>;\r\n};\r\n\r\nexport default SkillTree;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCode,\r\n  faBriefcase,\r\n  faGraduationCap,\r\n  faClipboard,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\nimport SkillTree from \"./SkillTree\";\r\n\r\nconst ResumeContainer = styled.div`\r\n  background-color: ${COLORS.background};\r\n  color: ${COLORS.text};\r\n  font-family: ${FONTS.body};\r\n  padding: ${SPACING.large};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: ${SPACING.medium};\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  font-family: ${FONTS.heading};\r\n  color: ${COLORS.primary};\r\n  margin-bottom: ${SPACING.small};\r\n`;\r\n\r\nconst Subheading = styled.h2`\r\n  font-family: ${FONTS.heading};\r\n  color: ${COLORS.primary};\r\n  margin-bottom: ${SPACING.small};\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  margin-right: ${SPACING.small};\r\n  color: ${COLORS.accent};\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin-bottom: ${SPACING.small};\r\n`;\r\n\r\nconst SkillList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SkillItem = styled.li`\r\n  background-color: ${COLORS.accent};\r\n  color: ${COLORS.background};\r\n  padding: ${SPACING.small};\r\n  margin: ${SPACING.small};\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkillIcon = styled(FontAwesomeIcon)`\r\n  margin-right: ${SPACING.small};\r\n`;\r\n\r\nconst skillsData = [\r\n  {\r\n    name: \"Programming Languages\",\r\n    subSkills: [\r\n      { name: \"JavaScript\" },\r\n      { name: \"Java\" },\r\n      { name: \"Python\" },\r\n      // Add more languages\r\n    ],\r\n  },\r\n  {\r\n    name: \"Web Development\",\r\n    subSkills: [\r\n      { name: \"React\" },\r\n      { name: \"Node.js\" },\r\n      { name: \"HTML\" },\r\n      { name: \"CSS\" },\r\n      // Add more web development technologies\r\n    ],\r\n  },\r\n  // Add more skill categories\r\n];\r\n\r\nconst ResumePage = () => {\r\n  return (\r\n    <ResumeContainer>\r\n      <Heading>Axel Eschholz</Heading>\r\n      <Section>\r\n        <Subheading>\r\n          <Icon>\r\n            <FontAwesomeIcon icon={faClipboard} />\r\n          </Icon>\r\n          Summary\r\n        </Subheading>\r\n        <Paragraph>\r\n          My passion is the convergence of technology and communication in a\r\n          globalized world. As a computer science student with a focus on\r\n          international politics and journalism, I am keenly interested in the\r\n          way that technology is perceived by general society. This interest\r\n          extends to bridging the gap between the often rigid world of\r\n          technological development and the messy, subjective,\r\n          communication-based world of business and politics.\r\n        </Paragraph>\r\n      </Section>\r\n      <Section>\r\n        <Subheading>\r\n          <Icon>\r\n            <FontAwesomeIcon icon={faCode} />\r\n          </Icon>\r\n          Skills\r\n        </Subheading>\r\n        <SkillTree skills={skillsData} />\r\n      </Section>\r\n      <Section>\r\n        <Subheading>\r\n          <Icon>\r\n            <FontAwesomeIcon icon={faBriefcase} />\r\n          </Icon>\r\n          Experience\r\n        </Subheading>\r\n        Experience under development\r\n      </Section>\r\n      <Section>\r\n        <Subheading>\r\n          <Icon>\r\n            <FontAwesomeIcon icon={faGraduationCap} />\r\n          </Icon>\r\n          Education\r\n        </Subheading>\r\n        <Paragraph>\r\n          <strong>Acadia University</strong> - Bachelor of Computer Science\r\n        </Paragraph>\r\n        <Paragraph>GPA: 4.22</Paragraph>\r\n      </Section>\r\n    </ResumeContainer>\r\n  );\r\n};\r\n\r\nexport default ResumePage;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\nimport { getPostBySlug } from \"../utils/markdownParser\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst Container = styled.div`\r\n  margin: ${SPACING.medium};\r\n`;\r\n\r\nconst Heading = styled.h2`\r\n  color: ${COLORS.text};\r\n  font-family: ${FONTS.heading};\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  color: ${COLORS.secondary};\r\n  font-family: ${FONTS.body};\r\n`;\r\n\r\nconst BlogPost = () => {\r\n  const { postId } = useParams();\r\n  const post = getPostBySlug(postId);\r\n\r\n  return (\r\n    <Container>\r\n      <Heading>{post.title}</Heading>\r\n      <Paragraph>{post.date}</Paragraph>\r\n      <ReactMarkdown>{post.content}</ReactMarkdown>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n","// src/utils/markdownParser.js\r\nimport allPosts from '../generated/posts.json';\r\nimport remark from 'remark';\r\nimport remarkHTML from 'remark-html';\r\n\r\nexport function getPostBySlug(slug) {\r\n  const post = allPosts.find((p) => p.slug === slug);\r\n\r\n  if (!post) {\r\n    throw new Error(`Post not found for slug: ${slug}`);\r\n  }\r\n\r\n  //if needed, use the following to render hthml version\r\n  //const htmlContent = remark().use(remarkHTML).processSync(post.content).toString();\r\n\r\n  return {\r\n    ...post,\r\n  };\r\n}\r\n\r\nexport function getAllPosts() {\r\n  return allPosts.map(({ content, ...rest }) => ({\r\n    ...rest,\r\n    //content: remark().use(remarkHTML).processSync(content).toString(),\r\n  }));\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport ResumePage from \"./components/ResumePage\";\r\nimport BlogPost from \"./components/BlogPost\";\r\nimport { getAllPosts } from \"./utils/markdownParser\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS } from \"./utils/StyleConstants\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${COLORS.background};\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\nconst App = () => {\r\n  console.log(\"RENDERING APP\");\r\n  const allPosts = getAllPosts();\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home posts={allPosts} />\r\n          </Route>\r\n          <Route path=\"/about\" exact>\r\n            <ResumePage />\r\n          </Route>\r\n          <Route path=\"/blog/:postId\" component={BlogPost} />\r\n        </Switch>\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n//import \"./public/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}