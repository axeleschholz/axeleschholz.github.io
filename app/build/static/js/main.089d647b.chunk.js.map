{"version":3,"sources":["utils/StyleConstants.js","components/Navbar.js","components/card.js","components/Home.js","components/SkillTree.js","components/ResumePage.js","components/BlogPost.js","utils/markdownParser.js","App.js","index.js"],"names":["COLORS","primary","secondary","background","accent","text","graphic","FONTS","SPACING","small","medium","large","Nav","styled","nav","_templateObject","_taggedTemplateLiteral","Ul","ul","_templateObject2","Li","li","_templateObject3","StyledLink","Link","_templateObject4","Navbar","_jsx","children","_jsxs","to","CardContainer","div","dark","lightText","Card","backgroundLight","CardHeader","CardTitle","h2","CardContent","_templateObject5","PostsContainer","WrapperLink","Home","_ref","posts","map","post","concat","slug","title","ReactMarkdown","content","SkillTreeContainer","SkillTreeNode","SkillTreeItem","SkillTreeConnector","SkillTreeBox","SkillTreeText","_templateObject6","SkillTree","skills","openNodes","setOpenNodes","useState","renderSkill","skill","parent","onClick","toggleNode","node","name","includes","filter","openNode","subSkills","renderSkills","span","xsmall","Icon","icon","FontAwesomeIcon","size","skillsData","ResumePage","faClipboard","faCode","faBriefcase","faGraduationCap","Container","Heading","Paragraph","p","BlogPost","postId","useParams","allPosts","find","Error","getPostBySlug","date","Wrapper","App","console","log","rest","length","slice","Router","Switch","Route","path","exact","component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.089d647b.chunk.js","sourcesContent":["export const COLORS = {\r\n  primary: '#171414',\r\n  secondary: '#333',     \r\n  background: \"#f5f5f5\",\r\n  accent: '#7A88FF',\r\n  text: '#1E1E1E',         \r\n  graphic: '#4CAF50',\r\n};\r\n  \r\nexport const FONTS = {\r\n  heading: 'Arial, sans-serif',\r\n  body: 'Verdana, sans-serif',\r\n};\r\n  \r\nexport const SPACING = {\r\n  small: '0.5em',\r\n  medium: '1em',\r\n  large: '1.5em',\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\n\r\nconst Nav = styled.nav`\r\n  background-color: ${COLORS.primary};\r\n  padding: ${SPACING.small};\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  margin-left: ${SPACING.small};\r\n`;\r\n\r\nconst Li = styled.li``;\r\n\r\nconst StyledLink = styled(Link)`\r\n  padding: ${SPACING.medium};\r\n  text-decoration: none;\r\n  flex: 1;\r\n  color: ${COLORS.background};\r\n  font-weight: bold;\r\n  font-family: ${FONTS.body};\r\n\r\n  &:hover {\r\n    background-color: ${COLORS.accent};\r\n  }\r\n`;\r\n\r\nconst Navbar = () => (\r\n  <Nav>\r\n    <Ul>\r\n      <Li>\r\n        <StyledLink to=\"/\">Home</StyledLink>\r\n      </Li>\r\n      <Li>\r\n        <StyledLink to=\"/about\">About</StyledLink>\r\n      </Li>\r\n    </Ul>\r\n  </Nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import styled, { css } from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\n\r\nexport const CardContainer = styled.div`\r\n  background-color: ${COLORS.dark};\r\n  color: ${COLORS.lightText};\r\n  font-family: ${FONTS.body};\r\n  padding: ${SPACING.large};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: ${SPACING.large};\r\n  justify-items: center;\r\n  margin: auto;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  background-color: ${COLORS.backgroundLight};\r\n  border-radius: 12px;\r\n  padding: ${SPACING.medium};\r\n  width: 100%;\r\n  max-width: 700px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n  &:hover {\r\n    transform: translateY(-10px);\r\n  }\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${SPACING.small};\r\n  svg {\r\n    color: ${COLORS.accent};\r\n    margin-right: ${SPACING.small};\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h2`\r\n  font-family: ${FONTS.heading};\r\n  color: ${COLORS.primary};\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\nimport {\r\n  CardContainer,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"./card\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst PostsContainer = styled.div`\r\n  padding: ${SPACING.medium};\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  margin-bottom: ${SPACING.small};\r\n`;\r\n\r\nconst WrapperLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${COLORS.text};\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${COLORS.text};\r\n  font-weight: bold;\r\n  font-family: ${FONTS.body};\r\n\r\n  &:hover {\r\n    color: ${COLORS.accent};\r\n  }\r\n`;\r\n\r\nconst Home = ({ posts }) => {\r\n  return (\r\n    <PostsContainer>\r\n      <h2>About This Project</h2>\r\n      <p>\r\n        This is the inital bare bones of a personal portfolio website. It runs\r\n        on React and does some cool stuff with loading post data through static\r\n        markdown files instead of dealing with a database.\r\n      </p>\r\n      <p>\r\n        Fun Fact: A lot of this was generated in collaboration with GPT 3.5. It\r\n        was my first experiment using ChatGPT to code and I was pleasently\r\n        surprised with the results.\r\n      </p>\r\n      <h2>Computers & Society Journals</h2>\r\n      <CardContainer>\r\n        {posts.map((post) => {\r\n          return (\r\n            <WrapperLink to={`/blog/${post.slug}`} key={post.slug}>\r\n              <Card key={post.slug}>\r\n                <CardHeader>\r\n                  <CardTitle>{post.title}</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <ReactMarkdown>{post.content}</ReactMarkdown>\r\n                </CardContent>\r\n              </Card>\r\n            </WrapperLink>\r\n          );\r\n        })}\r\n      </CardContainer>\r\n    </PostsContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// SkillTree.js\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, SPACING } from \"../utils/StyleConstants\";\r\n\r\nconst SkillTreeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row; /* Display children horizontally */\r\n  align-items: center;\r\n`;\r\n\r\nconst SkillTreeNode = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkillTreeItem = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\nconst SkillTreeConnector = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  width: ${SPACING.small};\r\n  height: 2px;\r\n  background-color: ${COLORS.primary};\r\n`;\r\n\r\nconst SkillTreeBox = styled.div`\r\n  border: 2px solid ${COLORS.accent};\r\n  background-color: ${COLORS.accent};\r\n  color: ${COLORS.background};\r\n  border-radius: 5px;\r\n  padding: ${SPACING.small};\r\n  margin: ${SPACING.small};\r\n  display: inline-block;\r\n`;\r\n\r\nconst SkillTreeText = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SkillTree = ({ skills }) => {\r\n  const [openNodes, setOpenNodes] = useState([]);\r\n\r\n  const toggleNode = (node) => {\r\n    if (openNodes.includes(node)) {\r\n      setOpenNodes(openNodes.filter((openNode) => openNode !== node));\r\n    } else {\r\n      setOpenNodes([...openNodes, node]);\r\n    }\r\n  };\r\n\r\n  const renderSkill = (skill) => (\r\n    <SkillTreeItem key={skill.name}>\r\n      {skill.parent && <SkillTreeConnector />}\r\n      <SkillTreeBox>\r\n        <SkillTreeNode>\r\n          <SkillTreeText onClick={() => toggleNode(skill.name)}>\r\n            {skill.subSkills ? (\r\n              <strong>{skill.name}</strong>\r\n            ) : (\r\n              <span>{skill.name}</span>\r\n            )}\r\n          </SkillTreeText>\r\n        </SkillTreeNode>\r\n      </SkillTreeBox>\r\n      {skill.subSkills && openNodes.includes(skill.name) && (\r\n        <SkillTreeContainer>{renderSkills(skill.subSkills)}</SkillTreeContainer>\r\n      )}\r\n    </SkillTreeItem>\r\n  );\r\n\r\n  const renderSkills = (skills) => skills.map(renderSkill);\r\n\r\n  return <SkillTreeContainer>{renderSkills(skills)}</SkillTreeContainer>;\r\n};\r\n\r\nexport default SkillTree;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCode,\r\n  faBriefcase,\r\n  faGraduationCap,\r\n  faClipboard,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\nimport SkillTree from \"./SkillTree\";\r\nimport {\r\n  CardContainer,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n} from \"./card\";\r\n\r\nconst SkillBadge = styled.span`\r\n  display: inline-block;\r\n  background-color: ${COLORS.primary};\r\n  color: ${COLORS.background};\r\n  padding: ${SPACING.xsmall} ${SPACING.small};\r\n  border-radius: 15px;\r\n  margin: ${SPACING.xsmall};\r\n  font-size: 0.8rem;\r\n`;\r\n\r\n// Reusable Icon component for headings\r\nconst Icon = ({ icon }) => <FontAwesomeIcon icon={icon} size=\"lg\" />;\r\nconst skillsData = [\r\n  {\r\n    name: \"Programming Languages\",\r\n    subSkills: [\r\n      { name: \"JavaScript\" },\r\n      { name: \"Java\" },\r\n      { name: \"Python\" },\r\n      // Add more languages\r\n    ],\r\n  },\r\n  {\r\n    name: \"Web Development\",\r\n    subSkills: [\r\n      { name: \"React\" },\r\n      { name: \"Node.js\" },\r\n      { name: \"HTML\" },\r\n      { name: \"CSS\" },\r\n      // Add more web development technologies\r\n    ],\r\n  },\r\n  // Add more skill categories\r\n];\r\n\r\nconst ResumePage = () => {\r\n  return (\r\n    <CardContainer>\r\n      <Card>\r\n        <CardHeader>\r\n          <Icon icon={faClipboard} />\r\n          <CardTitle>Axel Eschholz</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          A curious explorer at the intersection of technology and society, with\r\n          a passion for bridging the gap between technical innovation and global\r\n          communication.\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <Icon icon={faCode} />\r\n          <CardTitle>Skills</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <SkillTree skills={skillsData} />\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <Icon icon={faBriefcase} />\r\n          <CardTitle>Experience</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          Currently enriching my skills in real-world applications; stay tuned\r\n          for updates.\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <Icon icon={faGraduationCap} />\r\n          <CardTitle>Education</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <strong>Acadia University</strong> - Bachelor of Computer Science\r\n          (GPA: 4.22)\r\n        </CardContent>\r\n      </Card>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default ResumePage;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS, SPACING } from \"../utils/StyleConstants\";\r\nimport { getPostBySlug } from \"../utils/markdownParser\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst Container = styled.div`\r\n  margin: ${SPACING.medium};\r\n`;\r\n\r\nconst Heading = styled.h2`\r\n  color: ${COLORS.text};\r\n  font-family: ${FONTS.heading};\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  color: ${COLORS.secondary};\r\n  font-family: ${FONTS.body};\r\n`;\r\n\r\nconst BlogPost = () => {\r\n  const { postId } = useParams();\r\n  const post = getPostBySlug(postId);\r\n\r\n  return (\r\n    <Container>\r\n      <Heading>{post.title}</Heading>\r\n      <Paragraph>{post.date}</Paragraph>\r\n      <ReactMarkdown>{post.content}</ReactMarkdown>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n","// src/utils/markdownParser.js\r\nimport allPosts from \"../generated/posts.json\";\r\nimport remark from \"remark\";\r\nimport remarkHTML from \"remark-html\";\r\n\r\nexport function getPostBySlug(slug) {\r\n  const post = allPosts.find((p) => p.slug === slug);\r\n\r\n  if (!post) {\r\n    throw new Error(`Post not found for slug: ${slug}`);\r\n  }\r\n\r\n  //if needed, use the following to render hthml version\r\n  //const htmlContent = remark().use(remarkHTML).processSync(post.content).toString();\r\n\r\n  return {\r\n    ...post,\r\n  };\r\n}\r\n\r\nexport function getAllPosts() {\r\n  const maxLength = 500;\r\n  return allPosts.map(({ content, ...rest }) => ({\r\n    ...rest,\r\n    content:\r\n      content.length > maxLength\r\n        ? content.slice(0, maxLength) + \"...\"\r\n        : content,\r\n    //content: remark().use(remarkHTML).processSync(content).toString(),\r\n  }));\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport ResumePage from \"./components/ResumePage\";\r\nimport BlogPost from \"./components/BlogPost\";\r\nimport { getAllPosts } from \"./utils/markdownParser\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS } from \"./utils/StyleConstants\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${COLORS.background};\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\nconst App = () => {\r\n  console.log(\"RENDERING APP\");\r\n  const allPosts = getAllPosts();\r\n  console.log(allPosts);\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home posts={allPosts} />\r\n          </Route>\r\n          <Route path=\"/about\" exact>\r\n            <ResumePage />\r\n          </Route>\r\n          <Route path=\"/blog/:postId\" component={BlogPost} />\r\n        </Switch>\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n//import \"./public/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}